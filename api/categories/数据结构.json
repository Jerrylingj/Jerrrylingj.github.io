{"name":"数据结构","slug":"数据结构","count":4,"postlist":[{"title":"并查集","uid":"c18469ab20e7b093d36b4a61728d07eb","slug":"并查集","date":"2024-09-26T05:08:52.000Z","updated":"2024-09-29T01:45:58.531Z","comments":true,"path":"api/articles/并查集.json","cover":"https://th.bing.com/th/id/R.fee079a5295cd84de146adf2ae8fb673?rik=ljoYC8Go8n1K3A&pid=ImgRaw&r=0","text":"并查集（Union-Find）概述并查集是一种高效的数据结构，以多棵树的形式存储，每棵树有一个被打上标记的根节点 主要用途： 合并两个集合 查询元素所属的集合 ...","permalink":"/post/并查集","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"数据结构","slug":"数据结构","count":4,"path":"api/categories/数据结构.json"}],"tags":[{"name":"并查集","slug":"并查集","count":1,"path":"api/tags/并查集.json"}],"author":{"name":"Jerry","slug":"blog-author","avatar":"https://th.bing.com/th/id/R.7a1adf834060c41d2d476af2a5e322fd?rik=N35%2fqYx%2fr4RSog&riu=http%3a%2f%2fimg.keaiming.com%2fuploads%2fallimg%2f2020090111%2fsvaseyx4m3v.jpg&ehk=EBywhQ9emNaCt5dbn%2b%2fxbUc5yK42H8b%2ffRDsZKdVI6I%3d&risl=&pid=ImgRaw&r=0","link":"/","description":"一位正在重塑知识的技术人","socials":{"github":"https://github.com/Jerrylingj","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/2301_79143568?spm=1010.2135.3001.5343","juejin":"","customs":{}}}},{"title":"线段树","uid":"a448dfd8ebb4408d1633f0dff8411f1c","slug":"线段树","date":"2024-09-26T05:05:40.000Z","updated":"2024-09-26T05:06:45.615Z","comments":true,"path":"api/articles/线段树.json","cover":"https://th.bing.com/th/id/R.fa3e78819de038c741076b8fddc6d160?rik=SKPOERrrNiyH%2fg&pid=ImgRaw&r=0","text":"线段树（Segment Tree）概述线段树是一种高效的数据结构，用于解决区间查询和更新问题。它能够在 (O(\\log n)) 时间复杂度内完成以下操作： 查询...","permalink":"/post/线段树","photos":[],"count_time":{"symbolsCount":536,"symbolsTime":"1 mins."},"categories":[{"name":"数据结构","slug":"数据结构","count":4,"path":"api/categories/数据结构.json"}],"tags":[{"name":"线段树","slug":"线段树","count":1,"path":"api/tags/线段树.json"}],"author":{"name":"Jerry","slug":"blog-author","avatar":"https://th.bing.com/th/id/R.7a1adf834060c41d2d476af2a5e322fd?rik=N35%2fqYx%2fr4RSog&riu=http%3a%2f%2fimg.keaiming.com%2fuploads%2fallimg%2f2020090111%2fsvaseyx4m3v.jpg&ehk=EBywhQ9emNaCt5dbn%2b%2fxbUc5yK42H8b%2ffRDsZKdVI6I%3d&risl=&pid=ImgRaw&r=0","link":"/","description":"一位正在重塑知识的技术人","socials":{"github":"https://github.com/Jerrylingj","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/2301_79143568?spm=1010.2135.3001.5343","juejin":"","customs":{}}}},{"title":"基础数据结构","uid":"7ff326fdf142ec1868a8e7b87c57157c","slug":"基础数据结构","date":"2024-09-26T05:01:20.000Z","updated":"2024-09-26T05:04:06.497Z","comments":true,"path":"api/articles/基础数据结构.json","cover":"https://th.bing.com/th/id/R.abe96a9db2cbe50efe81eb818678d724?rik=zEX1OHssq3aT6w&pid=ImgRaw&r=0","text":"链表链表是一种线性数据结构，由一系列节点组成，每个节点包含数据部分和指向下一个节点的指针。链表的优点是插入和删除操作效率高，但随机访问的效率较低。根据节点的连接...","permalink":"/post/基础数据结构","photos":[],"count_time":{"symbolsCount":586,"symbolsTime":"1 mins."},"categories":[{"name":"数据结构","slug":"数据结构","count":4,"path":"api/categories/数据结构.json"}],"tags":[{"name":"链表","slug":"链表","count":1,"path":"api/tags/链表.json"},{"name":"栈","slug":"栈","count":1,"path":"api/tags/栈.json"},{"name":"队列","slug":"队列","count":1,"path":"api/tags/队列.json"},{"name":"堆","slug":"堆","count":1,"path":"api/tags/堆.json"}],"author":{"name":"Jerry","slug":"blog-author","avatar":"https://th.bing.com/th/id/R.7a1adf834060c41d2d476af2a5e322fd?rik=N35%2fqYx%2fr4RSog&riu=http%3a%2f%2fimg.keaiming.com%2fuploads%2fallimg%2f2020090111%2fsvaseyx4m3v.jpg&ehk=EBywhQ9emNaCt5dbn%2b%2fxbUc5yK42H8b%2ffRDsZKdVI6I%3d&risl=&pid=ImgRaw&r=0","link":"/","description":"一位正在重塑知识的技术人","socials":{"github":"https://github.com/Jerrylingj","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/2301_79143568?spm=1010.2135.3001.5343","juejin":"","customs":{}}}},{"title":"树状数组","uid":"36ef81d64d1d0edc64820d5afd16a0b4","slug":"树状数组","date":"2024-09-26T04:54:35.000Z","updated":"2024-09-28T16:29:35.878Z","comments":true,"path":"api/articles/树状数组.json","cover":"https://th.bing.com/th/id/R.349948a9f67c615b241ada975d1e76cf?rik=LtZ1fRrigxB51g&pid=ImgRaw&r=0","text":"树状数组（Fenwick Tree）概述树状数组是一种用于高效处理动态数组中前缀和查询的数据结构。它能够在 (O(\\log n)) 时间复杂度内完成以下操作： ...","permalink":"/post/树状数组","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"数据结构","slug":"数据结构","count":4,"path":"api/categories/数据结构.json"},{"name":"算法","slug":"数据结构/算法","count":1,"path":"api/categories/数据结构/算法.json"}],"tags":[{"name":"树状数组","slug":"树状数组","count":1,"path":"api/tags/树状数组.json"},{"name":"lowbit","slug":"lowbit","count":1,"path":"api/tags/lowbit.json"},{"name":"前缀和","slug":"前缀和","count":1,"path":"api/tags/前缀和.json"}],"author":{"name":"Jerry","slug":"blog-author","avatar":"https://th.bing.com/th/id/R.7a1adf834060c41d2d476af2a5e322fd?rik=N35%2fqYx%2fr4RSog&riu=http%3a%2f%2fimg.keaiming.com%2fuploads%2fallimg%2f2020090111%2fsvaseyx4m3v.jpg&ehk=EBywhQ9emNaCt5dbn%2b%2fxbUc5yK42H8b%2ffRDsZKdVI6I%3d&risl=&pid=ImgRaw&r=0","link":"/","description":"一位正在重塑知识的技术人","socials":{"github":"https://github.com/Jerrylingj","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/2301_79143568?spm=1010.2135.3001.5343","juejin":"","customs":{}}},"feature":true}]}