{"title":"二分","uid":"8038215b5c2b5aa82664c7d7c50d2cdc","slug":"二分","date":"2024-09-26T02:50:13.000Z","updated":"2024-09-26T03:41:55.703Z","comments":true,"path":"api/articles/二分.json","keywords":{"开发":["前端开发","后端开发","算法设计"],"科研":["算法研究","数学建模"],"兴趣":["长跑","音乐欣赏","指弹吉他"]},"cover":"https://n.sinaimg.cn/sinacn10112/181/w1550h1031/20191218/3315-ikvenft9359266.jpg","content":"<h1 id=\"二分\"><a href=\"#二分\" class=\"headerlink\" title=\"二分\"></a>二分</h1><p>❗❗❗<strong>❗二分查找的前提是被查找的数据必须是有二段性的</strong></p>\n<p>如何理解这句话呢？</p>\n<p>举个例子，在数组[1, 5 , 8, 9, 23, 25, 40]里找9</p>\n<p>我可以让check标准为<code>&lt;=9</code>，则转化为找数组中<code>&lt;=9最大值</code></p>\n<p>对于9左边的数，均小于等于9,而对于9右边的数，均大于9</p>\n<p><code>目标答案的两边一边满足check一边不满足check</code>，这便是二段性的含义</p>\n<p><strong>绝大多数时候，二段性均不明显，需要通过自行定义check标准把二段性弄出来，需要积累一定的题量</strong></p>\n<h2 id=\"核心思想\"><a href=\"#核心思想\" class=\"headerlink\" title=\"核心思想\"></a>核心思想</h2><p><strong>二分查找</strong>通过不断缩小查找范围，每次将范围缩小一半，最终定位目标元素的位置。</p>\n<h2 id=\"算法思路\"><a href=\"#算法思路\" class=\"headerlink\" title=\"算法思路\"></a>算法思路</h2><ol>\n<li><p><strong>初始化边界</strong>：</p>\n</li>\n<li><p>**进入二分，check(mid)**：</p>\n</li>\n<li><p><strong>重复操作</strong>：</p>\n</li>\n</ol>\n<h2 id=\"核心：不断折半\"><a href=\"#核心：不断折半\" class=\"headerlink\" title=\"核心：不断折半\"></a>核心：不断折半</h2><p><strong>折半查找</strong>的关键在于通过不断折半查找区间，可以大幅度减少查找次数，<strong>效率为 O(log n)</strong></p>\n<h3 id=\"代码：\"><a href=\"#代码：\" class=\"headerlink\" title=\"代码：\"></a>代码：</h3><hr>\n<p>二分的模板不唯一，关键就是要<strong>判断好循环终止条件和划分好折半区间的边界，避免死循环</strong></p>\n<p>这里放一个我一直在用的模板</p>\n<p><strong>整数二分</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 模板1：check选左</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">check</span><span class=\"params\">(<span class=\"type\">int</span> x)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 定义check标准</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (……) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> l = L, r = R; <span class=\"comment\">// 初始化边界</span></span><br><span class=\"line\">    <span class=\"type\">int</span> mid;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (l &lt; r)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        mid = l + r &gt;&gt; <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">check</span>(mid)) r = mid;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> l = mid + <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    cout &lt;&lt; l &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 模板2: check选右</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">check</span><span class=\"params\">(<span class=\"type\">int</span> x)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 定义check标准</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (……) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> l = L, r = R;</span><br><span class=\"line\">    <span class=\"type\">int</span> mid;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (l &lt; r)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        mid = l + r + <span class=\"number\">1</span> &gt;&gt; <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">check</span>(mid)) l = mid;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> r = mid - <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    cout &lt;&lt; l &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p><strong>小数二分</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">check</span><span class=\"params\">(<span class=\"type\">double</span> x)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 定义check标准</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (……) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">const</span> <span class=\"type\">double</span> eps = <span class=\"number\">1e-6</span>; <span class=\"comment\">// 设置精度</span></span><br><span class=\"line\">\t<span class=\"type\">double</span> l = L, r = R;</span><br><span class=\"line\">\t<span class=\"type\">double</span> mid;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (r - l &gt; eps)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">    \tmid = (l + r) / <span class=\"number\">2</span>;</span><br><span class=\"line\">    \t<span class=\"keyword\">if</span> (<span class=\"built_in\">check</span>(mid)) r = mid;</span><br><span class=\"line\">    \t<span class=\"keyword\">else</span> l = mid;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"模板题\"><a href=\"#模板题\" class=\"headerlink\" title=\"模板题\"></a>模板题</h3><p><strong><a href=\"https://www.luogu.com.cn/problem/P1083\">洛谷P1083 借教室</a></strong></p>\n<p><strong><a href=\"https://www.luogu.com.cn/problem/P3743\">洛谷P3743 小鸟的设备</a></strong></p>\n<p><strong><a href=\"https://www.luogu.com.cn/problem/P9240\">洛谷P9240 冶炼金属 </a></strong></p>\n<hr>\n<p><strong>如果文中有任何错误之处，欢迎大家在评论区批评指正！🙏</strong></p>\n","feature":true,"text":"二分算法...","permalink":"/post/二分","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"算法","slug":"算法","count":2,"path":"api/tags/算法.json"},{"name":"二分","slug":"二分","count":1,"path":"api/tags/二分.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E5%88%86\"><span class=\"toc-text\">二分</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%A0%B8%E5%BF%83%E6%80%9D%E6%83%B3\"><span class=\"toc-text\">核心思想</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AE%97%E6%B3%95%E6%80%9D%E8%B7%AF\"><span class=\"toc-text\">算法思路</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%A0%B8%E5%BF%83%EF%BC%9A%E4%B8%8D%E6%96%AD%E6%8A%98%E5%8D%8A\"><span class=\"toc-text\">核心：不断折半</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81%EF%BC%9A\"><span class=\"toc-text\">代码：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%A8%A1%E6%9D%BF%E9%A2%98\"><span class=\"toc-text\">模板题</span></a></li></ol></li></ol></li></ol>","author":{"name":"Jerry","slug":"blog-author","avatar":"https://th.bing.com/th/id/R.7a1adf834060c41d2d476af2a5e322fd?rik=N35%2fqYx%2fr4RSog&riu=http%3a%2f%2fimg.keaiming.com%2fuploads%2fallimg%2f2020090111%2fsvaseyx4m3v.jpg&ehk=EBywhQ9emNaCt5dbn%2b%2fxbUc5yK42H8b%2ffRDsZKdVI6I%3d&risl=&pid=ImgRaw&r=0","link":"/","description":"一位正在重塑知识的技术人","socials":{"github":"https://github.com/Jerrylingj","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/2301_79143568?spm=1010.2135.3001.5343","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{},"next_post":{"title":"排序","uid":"2a1893ca085cc0c5b7d1cdcd8c0b1c91","slug":"排序","date":"2024-09-26T02:05:17.000Z","updated":"2024-09-26T03:36:39.053Z","comments":true,"path":"api/articles/排序.json","keywords":{"开发":["前端开发","后端开发","算法设计"],"科研":["算法研究","数学建模"],"兴趣":["长跑","音乐欣赏","指弹吉他"]},"cover":"https://th.bing.com/th/id/R.ec013c54a665bb6b38fb0390e2987b80?rik=3OfrTtHdScARiQ&riu=http%3a%2f%2fqqpublic.qpic.cn%2fqq_public%2f0%2f0-595029769-EC013C54A665BB6B38FB0390E2987B80%2f0%3ffmt%3djpg%26size%3d101%26h%3d506%26w%3d900%26ppv%3d1.jpg&ehk=YrecwkKXnI1%2b2ARpQFDbvv%2bjFB66bRmEzr9q134unNk%3d&risl=&pid=ImgRaw&r=0","text":"快速排序与归并排序...","permalink":"/post/排序","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"算法","slug":"算法","count":2,"path":"api/tags/算法.json"},{"name":"快速排序","slug":"快速排序","count":1,"path":"api/tags/快速排序.json"},{"name":"归并排序","slug":"归并排序","count":1,"path":"api/tags/归并排序.json"}],"author":{"name":"Jerry","slug":"blog-author","avatar":"https://th.bing.com/th/id/R.7a1adf834060c41d2d476af2a5e322fd?rik=N35%2fqYx%2fr4RSog&riu=http%3a%2f%2fimg.keaiming.com%2fuploads%2fallimg%2f2020090111%2fsvaseyx4m3v.jpg&ehk=EBywhQ9emNaCt5dbn%2b%2fxbUc5yK42H8b%2ffRDsZKdVI6I%3d&risl=&pid=ImgRaw&r=0","link":"/","description":"一位正在重塑知识的技术人","socials":{"github":"https://github.com/Jerrylingj","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/2301_79143568?spm=1010.2135.3001.5343","juejin":"","customs":{}}},"feature":true}}