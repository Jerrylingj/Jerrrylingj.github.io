{"name":"算法","slug":"算法","count":8,"postlist":[{"title":"动态规划--线性DP","uid":"62555a6f14b066c1f526e128e3c72f4d","slug":"动态规划-线性DP","date":"2024-09-26T05:12:20.000Z","updated":"2024-09-30T01:41:40.238Z","comments":true,"path":"api/articles/动态规划-线性DP.json","cover":null,"text":"","permalink":"/post/动态规划-线性DP","photos":[],"count_time":{"symbolsCount":0,"symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":8,"path":"api/categories/算法.json"}],"tags":[{"name":"动态规划","slug":"动态规划","count":2,"path":"api/tags/动态规划.json"},{"name":"线性DP","slug":"线性DP","count":1,"path":"api/tags/线性DP.json"}],"author":{"name":"Jerry","slug":"blog-author","avatar":"https://th.bing.com/th/id/R.7a1adf834060c41d2d476af2a5e322fd?rik=N35%2fqYx%2fr4RSog&riu=http%3a%2f%2fimg.keaiming.com%2fuploads%2fallimg%2f2020090111%2fsvaseyx4m3v.jpg&ehk=EBywhQ9emNaCt5dbn%2b%2fxbUc5yK42H8b%2ffRDsZKdVI6I%3d&risl=&pid=ImgRaw&r=0","link":"/","description":"<strong>up up up</strong>","socials":{"github":"https://github.com/Jerrylingj","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/2301_79143568?spm=1010.2135.3001.5343","juejin":"","customs":{}}}},{"title":"动态规划--背包问题","uid":"398687178e2ec3c1a9498d5422c75757","slug":"动态规划-背包问题","date":"2024-09-26T05:12:09.000Z","updated":"2024-10-01T11:09:24.315Z","comments":true,"path":"api/articles/动态规划-背包问题.json","cover":"https://th.bing.com/th/id/R.45220ae8c60a277f746e75ff04ac119c?rik=rPdo6E7rtgZdgg&riu=http%3a%2f%2fimgs.aixifan.com%2flive%2f1483601994468%2f1483601994468.jpg&ehk=uZrP3Dy6rbH%2b1eBk9HChyF3X8Ebx9R7RPOzlgYNw5sI%3d&risl=&pid=ImgRaw&r=0","text":"🎮 背包问题欢迎来到 动态规划的冒险世界！在这趟旅途中，你将化身为一位勇敢的冒险者，面临一个经典而深邃的挑战：如何在有限的资源下获得最大的收益。每一关都充满了挑...","permalink":"/post/动态规划-背包问题","photos":[],"count_time":{"symbolsCount":"6.9k","symbolsTime":"6 mins."},"categories":[{"name":"算法","slug":"算法","count":8,"path":"api/categories/算法.json"}],"tags":[{"name":"动态规划","slug":"动态规划","count":2,"path":"api/tags/动态规划.json"},{"name":"背包问题","slug":"背包问题","count":1,"path":"api/tags/背包问题.json"}],"author":{"name":"Jerry","slug":"blog-author","avatar":"https://th.bing.com/th/id/R.7a1adf834060c41d2d476af2a5e322fd?rik=N35%2fqYx%2fr4RSog&riu=http%3a%2f%2fimg.keaiming.com%2fuploads%2fallimg%2f2020090111%2fsvaseyx4m3v.jpg&ehk=EBywhQ9emNaCt5dbn%2b%2fxbUc5yK42H8b%2ffRDsZKdVI6I%3d&risl=&pid=ImgRaw&r=0","link":"/","description":"<strong>up up up</strong>","socials":{"github":"https://github.com/Jerrylingj","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/2301_79143568?spm=1010.2135.3001.5343","juejin":"","customs":{}}}},{"title":"博弈论--NIM游戏","uid":"c3878449dce899402d13b06cc735de00","slug":"博弈论-NIM游戏","date":"2024-09-26T05:11:45.000Z","updated":"2024-10-01T11:05:03.674Z","comments":true,"path":"api/articles/博弈论-NIM游戏.json","cover":"https://wallpaperm.cmcm.com/b26f4834677e2f0c2cedbd24788b4362.jpg","text":"引入先介绍几个概念 1.公平组合游戏ICG： 两名玩家交替行动 在任意时刻，可执行的行动与玩家本身无关（游戏公平性） 不能行动的玩家输 2.有向图游戏 给定一个...","permalink":"/post/博弈论-NIM游戏","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":8,"path":"api/categories/算法.json"}],"tags":[{"name":"博弈论","slug":"博弈论","count":1,"path":"api/tags/博弈论.json"},{"name":"NIM游戏","slug":"NIM游戏","count":1,"path":"api/tags/NIM游戏.json"},{"name":"SG函数","slug":"SG函数","count":1,"path":"api/tags/SG函数.json"}],"author":{"name":"Jerry","slug":"blog-author","avatar":"https://th.bing.com/th/id/R.7a1adf834060c41d2d476af2a5e322fd?rik=N35%2fqYx%2fr4RSog&riu=http%3a%2f%2fimg.keaiming.com%2fuploads%2fallimg%2f2020090111%2fsvaseyx4m3v.jpg&ehk=EBywhQ9emNaCt5dbn%2b%2fxbUc5yK42H8b%2ffRDsZKdVI6I%3d&risl=&pid=ImgRaw&r=0","link":"/","description":"<strong>up up up</strong>","socials":{"github":"https://github.com/Jerrylingj","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/2301_79143568?spm=1010.2135.3001.5343","juejin":"","customs":{}}},"feature":true},{"title":"数学--约数","uid":"40241814551b223b651e15683e69d116","slug":"数学-约数","date":"2024-09-26T05:10:57.000Z","updated":"2024-10-01T07:00:19.552Z","comments":true,"path":"api/articles/数学-约数.json","cover":"https://th.bing.com/th/id/R.a0123ab1e32b53695e8e38f57b6f8e82?rik=TnC7RxdEWsug6Q&pid=ImgRaw&r=0","text":"约数1.求约数试除法求所有约数 枚举 对存 代码： 123456789101112vector<int> get_divisors(int x){ vector...","permalink":"/post/数学-约数","photos":[],"count_time":{"symbolsCount":373,"symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":8,"path":"api/categories/算法.json"}],"tags":[{"name":"数论","slug":"数论","count":3,"path":"api/tags/数论.json"},{"name":"约数","slug":"约数","count":1,"path":"api/tags/约数.json"}],"author":{"name":"Jerry","slug":"blog-author","avatar":"https://th.bing.com/th/id/R.7a1adf834060c41d2d476af2a5e322fd?rik=N35%2fqYx%2fr4RSog&riu=http%3a%2f%2fimg.keaiming.com%2fuploads%2fallimg%2f2020090111%2fsvaseyx4m3v.jpg&ehk=EBywhQ9emNaCt5dbn%2b%2fxbUc5yK42H8b%2ffRDsZKdVI6I%3d&risl=&pid=ImgRaw&r=0","link":"/","description":"<strong>up up up</strong>","socials":{"github":"https://github.com/Jerrylingj","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/2301_79143568?spm=1010.2135.3001.5343","juejin":"","customs":{}}}},{"title":"数学--质数","uid":"6390ac85391cd221383c57783115e1e4","slug":"数学-质数","date":"2024-09-26T05:10:48.000Z","updated":"2024-10-01T11:01:31.199Z","comments":true,"path":"api/articles/数学-质数.json","cover":"https://ts1.cn.mm.bing.net/th/id/R-C.dee7eeb72e0a34b54d8177152f7a5428?rik=sPmtIvirSP%2fHEQ&pid=ImgRaw&r=0","text":"质数 >1 只包含1和本身两个约数 1.判断质数试除法，只需枚举即可 代码： 12345678bool is_prime(int n){ if (n < 2) ...","permalink":"/post/数学-质数","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":8,"path":"api/categories/算法.json"}],"tags":[{"name":"数论","slug":"数论","count":3,"path":"api/tags/数论.json"},{"name":"质数","slug":"质数","count":1,"path":"api/tags/质数.json"}],"author":{"name":"Jerry","slug":"blog-author","avatar":"https://th.bing.com/th/id/R.7a1adf834060c41d2d476af2a5e322fd?rik=N35%2fqYx%2fr4RSog&riu=http%3a%2f%2fimg.keaiming.com%2fuploads%2fallimg%2f2020090111%2fsvaseyx4m3v.jpg&ehk=EBywhQ9emNaCt5dbn%2b%2fxbUc5yK42H8b%2ffRDsZKdVI6I%3d&risl=&pid=ImgRaw&r=0","link":"/","description":"<strong>up up up</strong>","socials":{"github":"https://github.com/Jerrylingj","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/2301_79143568?spm=1010.2135.3001.5343","juejin":"","customs":{}}}},{"title":"图论--最短路","uid":"23e5ccb93b471aba058840eff980504f","slug":"图论-最短路","date":"2024-09-26T05:09:40.000Z","updated":"2024-09-28T08:05:18.986Z","comments":true,"path":"api/articles/图论-最短路.json","cover":"https://img-baofun.zhhainiao.com/fs/42b96f61725b117579cf55204505a432.jpg","text":"最短路先贴张总体图： 1.单源最短路(1)边权均为正数①朴素Dijkstra算法思路： dist[i]存到起点的最短距离（在执行过程更新），st[i]存是否已确...","permalink":"/post/图论-最短路","photos":[],"count_time":{"symbolsCount":"5.5k","symbolsTime":"5 mins."},"categories":[{"name":"算法","slug":"算法","count":8,"path":"api/categories/算法.json"}],"tags":[{"name":"最短路","slug":"最短路","count":1,"path":"api/tags/最短路.json"},{"name":"图论","slug":"图论","count":1,"path":"api/tags/图论.json"},{"name":"Dijkstra","slug":"Dijkstra","count":1,"path":"api/tags/Dijkstra.json"},{"name":"SPFA","slug":"SPFA","count":1,"path":"api/tags/SPFA.json"},{"name":"Bellman-Ford","slug":"Bellman-Ford","count":1,"path":"api/tags/Bellman-Ford.json"},{"name":"Floyd","slug":"Floyd","count":1,"path":"api/tags/Floyd.json"}],"author":{"name":"Jerry","slug":"blog-author","avatar":"https://th.bing.com/th/id/R.7a1adf834060c41d2d476af2a5e322fd?rik=N35%2fqYx%2fr4RSog&riu=http%3a%2f%2fimg.keaiming.com%2fuploads%2fallimg%2f2020090111%2fsvaseyx4m3v.jpg&ehk=EBywhQ9emNaCt5dbn%2b%2fxbUc5yK42H8b%2ffRDsZKdVI6I%3d&risl=&pid=ImgRaw&r=0","link":"/","description":"<strong>up up up</strong>","socials":{"github":"https://github.com/Jerrylingj","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/2301_79143568?spm=1010.2135.3001.5343","juejin":"","customs":{}}}},{"title":"二分","uid":"8038215b5c2b5aa82664c7d7c50d2cdc","slug":"二分","date":"2024-09-26T02:50:13.000Z","updated":"2024-10-01T09:54:24.945Z","comments":true,"path":"api/articles/二分.json","cover":"https://n.sinaimg.cn/sinacn10112/181/w1550h1031/20191218/3315-ikvenft9359266.jpg","text":"二分 注意 ❗❗❗❗二分查找的前提是被查找的数据必须有二段性 如何理解这句话呢？ 举个例子，在数组[1, 5 , 8, 9, 23, 25, 40]里找9 我可...","permalink":"/post/二分","photos":[],"count_time":{"symbolsCount":"5.1k","symbolsTime":"5 mins."},"categories":[{"name":"算法","slug":"算法","count":8,"path":"api/categories/算法.json"}],"tags":[{"name":"基础算法","slug":"基础算法","count":2,"path":"api/tags/基础算法.json"},{"name":"二分","slug":"二分","count":1,"path":"api/tags/二分.json"}],"author":{"name":"Jerry","slug":"blog-author","avatar":"https://th.bing.com/th/id/R.7a1adf834060c41d2d476af2a5e322fd?rik=N35%2fqYx%2fr4RSog&riu=http%3a%2f%2fimg.keaiming.com%2fuploads%2fallimg%2f2020090111%2fsvaseyx4m3v.jpg&ehk=EBywhQ9emNaCt5dbn%2b%2fxbUc5yK42H8b%2ffRDsZKdVI6I%3d&risl=&pid=ImgRaw&r=0","link":"/","description":"<strong>up up up</strong>","socials":{"github":"https://github.com/Jerrylingj","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/2301_79143568?spm=1010.2135.3001.5343","juejin":"","customs":{}}}},{"title":"排序","uid":"2a1893ca085cc0c5b7d1cdcd8c0b1c91","slug":"排序","date":"2024-09-26T02:05:17.000Z","updated":"2024-10-01T09:56:34.924Z","comments":true,"path":"api/articles/排序.json","cover":"https://th.bing.com/th/id/R.ec013c54a665bb6b38fb0390e2987b80?rik=3OfrTtHdScARiQ&riu=http%3a%2f%2fqqpublic.qpic.cn%2fqq_public%2f0%2f0-595029769-EC013C54A665BB6B38FB0390E2987B80%2f0%3ffmt%3djpg%26size%3d101%26h%3d506%26w%3d900%26ppv%3d1.jpg&ehk=YrecwkKXnI1%2b2ARpQFDbvv%2bjFB66bRmEzr9q134unNk%3d&risl=&pid=ImgRaw&r=0","text":"1.快速排序对数组 q 在下标 l 到 r 的范围内进行升序排序。 快速排序通过多次的比较和交换，在一趟排序之中确定好选择的基准应该在的位置。这个位置满足的条件...","permalink":"/post/排序","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"算法","slug":"算法","count":8,"path":"api/categories/算法.json"}],"tags":[{"name":"基础算法","slug":"基础算法","count":2,"path":"api/tags/基础算法.json"},{"name":"快速排序","slug":"快速排序","count":1,"path":"api/tags/快速排序.json"},{"name":"归并排序","slug":"归并排序","count":1,"path":"api/tags/归并排序.json"}],"author":{"name":"Jerry","slug":"blog-author","avatar":"https://th.bing.com/th/id/R.7a1adf834060c41d2d476af2a5e322fd?rik=N35%2fqYx%2fr4RSog&riu=http%3a%2f%2fimg.keaiming.com%2fuploads%2fallimg%2f2020090111%2fsvaseyx4m3v.jpg&ehk=EBywhQ9emNaCt5dbn%2b%2fxbUc5yK42H8b%2ffRDsZKdVI6I%3d&risl=&pid=ImgRaw&r=0","link":"/","description":"<strong>up up up</strong>","socials":{"github":"https://github.com/Jerrylingj","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/2301_79143568?spm=1010.2135.3001.5343","juejin":"","customs":{}}}}]}